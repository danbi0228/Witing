Index: .idea/Witing.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Witing.iml b/.idea/Witing.iml
new file mode 100644
--- /dev/null	(date 1670804728046)
+++ b/.idea/Witing.iml	(date 1670804728046)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: witing/src/test/java/com/multi/accom/HotelAPITest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/witing/src/test/java/com/multi/accom/HotelAPITest.java b/witing/src/test/java/com/multi/accom/HotelAPITest.java
new file mode 100644
--- /dev/null	(date 1669120181859)
+++ b/witing/src/test/java/com/multi/accom/HotelAPITest.java	(date 1669120181859)
@@ -0,0 +1,89 @@
+package com.multi.accom;
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.util.ArrayList;
+
+import org.json.simple.JSONObject;
+import org.json.simple.JSONArray;
+import org.json.simple.parser.JSONParser;
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class HotelAPITest {
+
+	@Test
+	void contextLoads() throws Exception {
+		StringBuilder urlBuilder = new StringBuilder(
+				"https://api.odcloud.kr/api/3077845/v1/uddi:a04a9c34-c1f3-4c8f-9b04-cc1f3e4a0fa6_201705111656?page=1&perPage=10&serviceKey=ZbDOQPp5hXDSNP7dEFvPIRNEAZ0BisgXmoWTz%2BNJI5F4rWw17ZqbgoeFAo03CLWW0LFfuvo%2BsMUihyZb66O4uw%3D%3D"); /* URL */
+//		urlBuilder.append("?" + URLEncoder.encode("serviceKey", "UTF-8") + "=ZbDOQPp5hXDSNP7dEFvPIRNEAZ0BisgXmoWTz%2BNJI5F4rWw17ZqbgoeFAo03CLWW0LFfuvo%2BsMUihyZb66O4uw%3D%3D"); /* Service Key */
+//		urlBuilder.append("&" + URLEncoder.encode("pageNo", "UTF-8") + "=" + URLEncoder.encode("1", "UTF-8")); /* 페이지번호 */
+//		urlBuilder.append("&" + URLEncoder.encode("numOfRows", "UTF-8") + "="
+//				+ URLEncoder.encode("10", "UTF-8")); /* 한 페이지 결과 수 */
+//		urlBuilder.append("&" + URLEncoder.encode("dataType", "UTF-8") + "="
+//				+ URLEncoder.encode("JSON", "UTF-8")); /* 요청자료형식(XML/JSON)Default: XML */
+//		urlBuilder.append("&" + URLEncoder.encode("stnId", "UTF-8") + "="
+//				+ URLEncoder.encode("108", "UTF-8")); /* 108 전국, 109 서울, 인천, 경기도 등 (활용가이드 하단 참고자료 참조) */
+//		urlBuilder.append("&" + URLEncoder.encode("tmFc", "UTF-8") + "=" + URLEncoder.encode("202210270600",
+//				"UTF-8")); /*-일 2회(06:00,18:00)회 생성 되며 발표시각을 입력 YYYYMMDD0600 (1800)-최근 24시간 자료만 제공*/
+		URL url = new URL(urlBuilder.toString());
+		HttpURLConnection conn = (HttpURLConnection) url.openConnection();
+		conn.setRequestMethod("GET");
+		conn.setRequestProperty("Content-type", "application/json");
+		System.out.println("Response code: " + conn.getResponseCode());
+		BufferedReader rd;
+		if (conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
+			rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
+		} else {
+			rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
+		}
+		StringBuilder sb = new StringBuilder();
+		String line;
+		while ((line = rd.readLine()) != null) {
+			sb.append(line);
+		}
+		rd.close();
+		conn.disconnect();
+		System.out.println(sb.toString());
+//		org.json.JSONObject jo = new JSONObject(sb.toString());
+		
+//		System.out.println(jo.toString());
+//		System.out.println("--------------------");
+		
+		String jsonstring = sb.toString();
+//		System.out.println(jsonstring);
+		
+		JSONParser parser = new JSONParser();
+		JSONObject obj = (JSONObject)parser.parse(jsonstring);
+		JSONArray data = (JSONArray)obj.get("data");
+
+//		System.out.println(data);
+		
+		ArrayList<ArrayList<String>> array = new ArrayList<>();
+		
+		for(int i=0; i<data.size();i++) {
+			JSONObject hotel = (JSONObject)data.get(i);
+			ArrayList<String> temp = new ArrayList<>();
+			temp.add((String)hotel.get("업소명"));
+			temp.add((String)hotel.get("소재지전화"));
+			temp.add((String)hotel.get("업소소재지(지번)"));
+			
+//			array.add(temp);
+			System.out.println(temp);
+			
+//			String hotelname = (String)hotel.get("업소명");
+//			String addr = (String)hotel.get("업소소재지(지번)");
+//			String number = (String)hotel.get("소재지전화");
+//			
+//			System.out.println("호텔명:"+hotelname);
+//			System.out.println("주소:"+addr);
+//			System.out.println("전화번호:"+number);
+//			System.out.println("------------------");
+		}
+		
+	}
+}
+
Index: witing/src/main/java/com/multi/frame/WUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/witing/src/main/java/com/multi/frame/WUtil.java b/witing/src/main/java/com/multi/frame/WUtil.java
new file mode 100644
--- /dev/null	(date 1668235394623)
+++ b/witing/src/main/java/com/multi/frame/WUtil.java	(date 1668235394623)
@@ -0,0 +1,40 @@
+package com.multi.frame;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.net.URLEncoder;
+
+public class WUtil {
+	public static Object getData(String loc) throws IOException {
+		StringBuilder urlBuilder = new StringBuilder(
+				"https://api.odcloud.kr/api/15049210/v1/uddi:1c3044fe-5aff-426e-b87a-f5d093cc6d27?page=1&perPage=10&serviceKey=ZbDOQPp5hXDSNP7dEFvPIRNEAZ0BisgXmoWTz%2BNJI5F4rWw17ZqbgoeFAo03CLWW0LFfuvo%2BsMUihyZb66O4uw%3D%3D"); /* URL */
+//		urlBuilder.append("?" + URLEncoder.encode("serviceKey", "UTF-8") + "=ZbDOQPp5hXDSNP7dEFvPIRNEAZ0BisgXmoWTz%2BNJI5F4rWw17ZqbgoeFAo03CLWW0LFfuvo%2BsMUihyZb66O4uw%3D%3D"); /* Service Key */
+//		urlBuilder.append("?page=1"); /* 페이지번호 */
+//		urlBuilder.append("?perPage=10"); /* 한 페이지 결과 수 */
+//		urlBuilder.append("?serviceKey=ZbDOQPp5hXDSNP7dEFvPIRNEAZ0BisgXmoWTz%2BNJI5F4rWw17ZqbgoeFAo03CLWW0LFfuvo%2BsMUihyZb66O4uw%3D%3D"); /* 한 페이지 결과 수 */
+		URL url = new URL(urlBuilder.toString());
+		HttpURLConnection conn = (HttpURLConnection) url.openConnection();
+		conn.setRequestMethod("GET");
+		conn.setRequestProperty("Content-type", "application/json");
+		System.out.println("Response code: " + conn.getResponseCode());
+		BufferedReader rd;
+		if (conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
+			rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
+		} else {
+			rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
+		}
+		StringBuilder sb = new StringBuilder();
+		String line;
+		while ((line = rd.readLine()) != null) {
+			sb.append(line);
+		}
+		rd.close();
+		conn.disconnect();
+		System.out.println(sb.toString());
+		
+		return sb.toString();
+	}
+}
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1670804730794)
+++ b/.idea/.gitignore	(date 1670804730794)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1670804728079)
+++ b/.idea/modules.xml	(date 1670804728079)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Witing.iml" filepath="$PROJECT_DIR$/.idea/Witing.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1670804728100)
+++ b/.idea/vcs.xml	(date 1670804728100)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
